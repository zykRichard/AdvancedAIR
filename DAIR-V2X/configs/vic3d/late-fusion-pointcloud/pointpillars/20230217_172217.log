2023-02-17 17:22:18,080 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: NVIDIA A100-SXM4-80GB
CUDA_HOME: /usr/local/cuda
NVCC: Build cuda_11.1.TC455_06.29069683_0
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.0
OpenCV: 4.6.0
MMCV: 1.4.0
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.14.0
MMSegmentation: 0.14.1
MMDetection3D: 0.17.1+f110797
------------------------------------------------------------

2023-02-17 17:22:20,748 - mmdet - INFO - Distributed training: True
2023-02-17 17:22:23,488 - mmdet - INFO - Config:
dataset_type = 'KittiDataset'
data_root = 'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side'
class_names = ['Pedestrian', 'Cyclist', 'Car']
point_cloud_range = [0, -39.68, -3, 102.4, 39.68, 1]
voxel_size = [0.16, 0.16, 4]
length = 640
height = 496
output_shape = [496, 640]
z_center_pedestrian = -0.6
z_center_cyclist = -0.6
z_center_car = -1.78
work_dir = './work_dirs/vic3d_latefusion_pointpillars_trainval'
model = dict(
    type='VoxelNet',
    voxel_layer=dict(
        max_num_points=32,
        point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1],
        voxel_size=[0.16, 0.16, 4],
        max_voxels=(16000, 40000)),
    voxel_encoder=dict(
        type='PillarFeatureNet',
        in_channels=4,
        feat_channels=[64],
        with_distance=False,
        voxel_size=[0.16, 0.16, 4],
        point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1]),
    middle_encoder=dict(
        type='PointPillarsScatter', in_channels=64, output_shape=[496, 640]),
    backbone=dict(
        type='SECOND',
        in_channels=64,
        layer_nums=[3, 5, 5],
        layer_strides=[2, 2, 2],
        out_channels=[64, 128, 256]),
    neck=dict(
        type='SECONDFPN',
        in_channels=[64, 128, 256],
        upsample_strides=[1, 2, 4],
        out_channels=[128, 128, 128]),
    bbox_head=dict(
        type='Anchor3DHead',
        num_classes=3,
        in_channels=384,
        feat_channels=384,
        use_direction_classifier=True,
        anchor_generator=dict(
            type='Anchor3DRangeGenerator',
            ranges=[[0, -39.68, -0.6, 102.4, 39.68, -0.6],
                    [0, -39.68, -0.6, 102.4, 39.68, -0.6],
                    [0, -39.68, -1.78, 102.4, 39.68, -1.78]],
            sizes=[[0.6, 0.8, 1.73], [0.6, 1.76, 1.73], [1.6, 3.9, 1.56]],
            rotations=[0, 1.57],
            reshape_out=False),
        diff_rad_by_sin=True,
        bbox_coder=dict(type='DeltaXYZWLHRBBoxCoder'),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        loss_bbox=dict(
            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=2.0),
        loss_dir=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.2)),
    train_cfg=dict(
        assigner=[
            dict(
                type='MaxIoUAssigner',
                iou_calculator=dict(type='BboxOverlapsNearest3D'),
                pos_iou_thr=0.5,
                neg_iou_thr=0.35,
                min_pos_iou=0.35,
                ignore_iof_thr=-1),
            dict(
                type='MaxIoUAssigner',
                iou_calculator=dict(type='BboxOverlapsNearest3D'),
                pos_iou_thr=0.5,
                neg_iou_thr=0.35,
                min_pos_iou=0.35,
                ignore_iof_thr=-1),
            dict(
                type='MaxIoUAssigner',
                iou_calculator=dict(type='BboxOverlapsNearest3D'),
                pos_iou_thr=0.6,
                neg_iou_thr=0.45,
                min_pos_iou=0.45,
                ignore_iof_thr=-1)
        ],
        allowed_border=0,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        use_rotate_nms=True,
        nms_across_levels=False,
        nms_thr=0.01,
        score_thr=0.1,
        min_bbox_size=0,
        nms_pre=100,
        max_num=50))
file_client_args = dict(backend='disk')
train_pipeline = [
    dict(type='LoadPointsFromFile', coord_type='LIDAR', load_dim=4, use_dim=4),
    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),
    dict(
        type='ObjectSample',
        db_sampler=dict(
            data_root=
            'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side',
            info_path=
            'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side/kitti_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1],
                filter_by_min_points=dict(Car=5, Pedestrian=10, Cyclist=10)),
            classes=['Pedestrian', 'Cyclist', 'Car'],
            sample_groups=dict(Car=15, Pedestrian=10, Cyclist=10))),
    dict(
        type='ObjectNoise',
        num_try=100,
        translation_std=[0.25, 0.25, 0.25],
        global_rot_range=[0.0, 0.0],
        rot_range=[-0.15707963267, 0.15707963267]),
    dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),
    dict(
        type='GlobalRotScaleTrans',
        rot_range=[-0.78539816, 0.78539816],
        scale_ratio_range=[0.95, 1.05]),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1]),
    dict(type='PointShuffle'),
    dict(
        type='DefaultFormatBundle3D',
        class_names=['Pedestrian', 'Cyclist', 'Car']),
    dict(type='Collect3D', keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
]
test_pipeline = [
    dict(type='LoadPointsFromFile', coord_type='LIDAR', load_dim=4, use_dim=4),
    dict(
        type='MultiScaleFlipAug3D',
        img_scale=(496, 640),
        pts_scale_ratio=1,
        flip=False,
        transforms=[
            dict(
                type='GlobalRotScaleTrans',
                rot_range=[0, 0],
                scale_ratio_range=[1.0, 1.0],
                translation_std=[0, 0, 0]),
            dict(type='RandomFlip3D'),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1]),
            dict(
                type='DefaultFormatBundle3D',
                class_names=['Pedestrian', 'Cyclist', 'Car'],
                with_label=False),
            dict(type='Collect3D', keys=['points'])
        ])
]
eval_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=4,
        use_dim=4,
        file_client_args=dict(backend='disk')),
    dict(
        type='DefaultFormatBundle3D',
        class_names=['Pedestrian', 'Cyclist', 'Car'],
        with_label=False),
    dict(type='Collect3D', keys=['points'])
]
data = dict(
    samples_per_gpu=6,
    workers_per_gpu=4,
    train=dict(
        type='RepeatDataset',
        times=2,
        dataset=dict(
            type='KittiDataset',
            data_root=
            'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side',
            ann_file=
            'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side/kitti_infos_trainval.pkl',
            split='training',
            pts_prefix='velodyne_reduced',
            pipeline=[
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=4,
                    use_dim=4),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True),
                dict(
                    type='ObjectSample',
                    db_sampler=dict(
                        data_root=
                        'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side',
                        info_path=
                        'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side/kitti_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(
                                Car=5, Pedestrian=10, Cyclist=10)),
                        classes=['Pedestrian', 'Cyclist', 'Car'],
                        sample_groups=dict(Car=15, Pedestrian=10,
                                           Cyclist=10))),
                dict(
                    type='ObjectNoise',
                    num_try=100,
                    translation_std=[0.25, 0.25, 0.25],
                    global_rot_range=[0.0, 0.0],
                    rot_range=[-0.15707963267, 0.15707963267]),
                dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),
                dict(
                    type='GlobalRotScaleTrans',
                    rot_range=[-0.78539816, 0.78539816],
                    scale_ratio_range=[0.95, 1.05]),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1]),
                dict(type='PointShuffle'),
                dict(
                    type='DefaultFormatBundle3D',
                    class_names=['Pedestrian', 'Cyclist', 'Car']),
                dict(
                    type='Collect3D',
                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
            ],
            modality=dict(use_lidar=True, use_camera=False),
            classes=['Pedestrian', 'Cyclist', 'Car'],
            test_mode=False,
            pcd_limit_range=[0, -39.68, -3, 102.4, 39.68, 1],
            box_type_3d='LiDAR')),
    val=dict(
        type='KittiDataset',
        data_root=
        'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side',
        ann_file=
        'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side/kitti_infos_val.pkl',
        split='training',
        pts_prefix='velodyne_reduced',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=4,
                use_dim=4),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(496, 640),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='GlobalRotScaleTrans',
                        rot_range=[0, 0],
                        scale_ratio_range=[1.0, 1.0],
                        translation_std=[0, 0, 0]),
                    dict(type='RandomFlip3D'),
                    dict(
                        type='PointsRangeFilter',
                        point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1]),
                    dict(
                        type='DefaultFormatBundle3D',
                        class_names=['Pedestrian', 'Cyclist', 'Car'],
                        with_label=False),
                    dict(type='Collect3D', keys=['points'])
                ])
        ],
        modality=dict(use_lidar=True, use_camera=False),
        classes=['Pedestrian', 'Cyclist', 'Car'],
        test_mode=True,
        pcd_limit_range=[0, -39.68, -3, 102.4, 39.68, 1],
        box_type_3d='LiDAR'),
    test=dict(
        type='KittiDataset',
        data_root=
        'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side',
        ann_file=
        'data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side/kitti_infos_val.pkl',
        split='training',
        pts_prefix='velodyne_reduced',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=4,
                use_dim=4),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(496, 640),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='GlobalRotScaleTrans',
                        rot_range=[0, 0],
                        scale_ratio_range=[1.0, 1.0],
                        translation_std=[0, 0, 0]),
                    dict(type='RandomFlip3D'),
                    dict(
                        type='PointsRangeFilter',
                        point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1]),
                    dict(
                        type='DefaultFormatBundle3D',
                        class_names=['Pedestrian', 'Cyclist', 'Car'],
                        with_label=False),
                    dict(type='Collect3D', keys=['points'])
                ])
        ],
        modality=dict(use_lidar=True, use_camera=False),
        classes=['Pedestrian', 'Cyclist', 'Car'],
        test_mode=True,
        pcd_limit_range=[0, -39.68, -3, 102.4, 39.68, 1],
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=10,
    pipeline=[
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=4,
            use_dim=4,
            file_client_args=dict(backend='disk')),
        dict(
            type='DefaultFormatBundle3D',
            class_names=['Pedestrian', 'Cyclist', 'Car'],
            with_label=False),
        dict(type='Collect3D', keys=['points'])
    ])
lr = 0.001
optimizer = dict(type='AdamW', lr=0.001, betas=(0.95, 0.99), weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='cyclic',
    target_ratio=(10, 0.0001),
    cyclic_times=1,
    step_ratio_up=0.4)
momentum_config = dict(
    policy='cyclic',
    target_ratio=(0.8947368421052632, 1),
    cyclic_times=1,
    step_ratio_up=0.4)
runner = dict(type='EpochBasedRunner', max_epochs=20)
checkpoint_config = dict(interval=10)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
gpu_ids = range(0, 8)

2023-02-17 17:22:23,488 - mmdet - INFO - Set random seed to 0, deterministic: False
2023-02-17 17:22:23,534 - mmdet - INFO - initialize SECOND with init_cfg {'type': 'Kaiming', 'layer': 'Conv2d'}
2023-02-17 17:22:23,576 - mmdet - INFO - initialize SECONDFPN with init_cfg [{'type': 'Kaiming', 'layer': 'ConvTranspose2d'}, {'type': 'Constant', 'layer': 'NaiveSyncBatchNorm2d', 'val': 1.0}]
2023-02-17 17:22:23,582 - mmdet - INFO - initialize Anchor3DHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01, 'override': {'type': 'Normal', 'name': 'conv_cls', 'std': 0.01, 'bias_prob': 0.01}}
Name of parameter - Initialization information

backbone.blocks.0.0.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.0.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.0.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.0.3.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.0.4.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.0.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.0.6.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.0.7.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.0.7.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.0.9.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.0.10.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.0.10.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.0.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.1.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.3.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.1.4.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.6.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.1.7.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.7.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.9.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.1.10.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.10.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.12.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.1.13.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.13.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.15.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.1.16.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.1.16.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.0.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.2.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.3.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.2.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.6.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.2.7.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.7.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.9.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.2.10.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.10.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.12.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.2.13.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.13.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.15.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.blocks.2.16.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

backbone.blocks.2.16.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of VoxelNet  

neck.deblocks.0.0.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

neck.deblocks.0.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

neck.deblocks.0.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

neck.deblocks.1.0.weight - torch.Size([128, 128, 2, 2]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

neck.deblocks.1.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

neck.deblocks.1.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

neck.deblocks.2.0.weight - torch.Size([256, 128, 4, 4]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

neck.deblocks.2.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

neck.deblocks.2.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of VoxelNet  

bbox_head.conv_cls.weight - torch.Size([18, 384, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

bbox_head.conv_cls.bias - torch.Size([18]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

bbox_head.conv_reg.weight - torch.Size([42, 384, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.conv_reg.bias - torch.Size([42]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.conv_dir_cls.weight - torch.Size([12, 384, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.conv_dir_cls.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

voxel_encoder.pfn_layers.0.norm.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

voxel_encoder.pfn_layers.0.norm.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of VoxelNet  

voxel_encoder.pfn_layers.0.linear.weight - torch.Size([64, 9]): 
The value is the same before and after calling `init_weights` of VoxelNet  
2023-02-17 17:22:23,585 - mmdet - INFO - Model:
VoxelNet(
  (backbone): SECOND(
    (blocks): ModuleList(
      (0): Sequential(
        (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (7): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (7): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (13): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
        (15): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (16): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (17): ReLU(inplace=True)
      )
      (2): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (13): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (16): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (17): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
  (neck): SECONDFPN(
    (deblocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (2): Sequential(
        (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': 'ConvTranspose2d'}, {'type': 'Constant', 'layer': 'NaiveSyncBatchNorm2d', 'val': 1.0}]
  (bbox_head): Anchor3DHead(
    (loss_cls): FocalLoss()
    (loss_bbox): SmoothL1Loss()
    (loss_dir): CrossEntropyLoss()
    (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
    (conv_reg): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
    (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
  )
  init_cfg={'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01, 'override': {'type': 'Normal', 'name': 'conv_cls', 'std': 0.01, 'bias_prob': 0.01}}
  (voxel_layer): Voxelization(voxel_size=[0.16, 0.16, 4], point_cloud_range=[0, -39.68, -3, 102.4, 39.68, 1], max_num_points=32, max_voxels=(16000, 40000), deterministic=True)
  (voxel_encoder): PillarFeatureNet(
    (pfn_layers): ModuleList(
      (0): PFNLayer(
        (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (linear): Linear(in_features=9, out_features=64, bias=False)
      )
    )
  )
  (middle_encoder): PointPillarsScatter()
)
2023-02-17 17:22:32,769 - mmdet - INFO - Start running, host: lixiang@jupyter2, work_dir: /home/lixiang/mmdetection3d/work_dirs/vic3d_latefusion_pointpillars_trainval
2023-02-17 17:22:32,770 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2023-02-17 17:22:32,770 - mmdet - INFO - workflow: [('train', 1)], max: 20 epochs
2023-02-17 17:22:32,770 - mmdet - INFO - Checkpoints will be saved to /home/lixiang/mmdetection3d/work_dirs/vic3d_latefusion_pointpillars_trainval by HardDiskBackend.
2023-02-17 17:23:24,130 - mmdet - INFO - Epoch [1][50/518]	lr: 1.003e-03, eta: 2:41:29, time: 0.940, data_time: 0.346, memory: 9036, loss_cls: 0.7140, loss_bbox: 1.5586, loss_dir: 0.1223, loss: 2.3950, grad_norm: 5.1037
2023-02-17 17:23:51,471 - mmdet - INFO - Epoch [1][100/518]	lr: 1.013e-03, eta: 2:07:05, time: 0.547, data_time: 0.011, memory: 9036, loss_cls: 0.4828, loss_bbox: 0.9610, loss_dir: 0.1202, loss: 1.5641, grad_norm: 3.4485
2023-02-17 17:24:20,699 - mmdet - INFO - Epoch [1][150/518]	lr: 1.029e-03, eta: 1:57:28, time: 0.585, data_time: 0.010, memory: 9036, loss_cls: 0.3818, loss_bbox: 0.8311, loss_dir: 0.1196, loss: 1.3325, grad_norm: 4.1327
2023-02-17 17:24:48,160 - mmdet - INFO - Epoch [1][200/518]	lr: 1.051e-03, eta: 1:50:55, time: 0.549, data_time: 0.010, memory: 9036, loss_cls: 0.3278, loss_bbox: 0.7752, loss_dir: 0.1190, loss: 1.2219, grad_norm: 4.0466
2023-02-17 17:25:16,252 - mmdet - INFO - Epoch [1][250/518]	lr: 1.080e-03, eta: 1:47:14, time: 0.562, data_time: 0.010, memory: 9036, loss_cls: 0.2970, loss_bbox: 0.7498, loss_dir: 0.1179, loss: 1.1647, grad_norm: 3.8201
2023-02-17 17:25:43,807 - mmdet - INFO - Epoch [1][300/518]	lr: 1.115e-03, eta: 1:44:19, time: 0.551, data_time: 0.010, memory: 9036, loss_cls: 0.2752, loss_bbox: 0.7185, loss_dir: 0.1173, loss: 1.1111, grad_norm: 4.0069
2023-02-17 17:26:11,647 - mmdet - INFO - Epoch [1][350/518]	lr: 1.157e-03, eta: 1:42:14, time: 0.557, data_time: 0.010, memory: 9036, loss_cls: 0.2606, loss_bbox: 0.6908, loss_dir: 0.1171, loss: 1.0685, grad_norm: 4.0925
2023-02-17 17:26:39,904 - mmdet - INFO - Epoch [1][400/518]	lr: 1.204e-03, eta: 1:40:44, time: 0.565, data_time: 0.010, memory: 9036, loss_cls: 0.2508, loss_bbox: 0.6742, loss_dir: 0.1163, loss: 1.0413, grad_norm: 3.8222
2023-02-17 17:27:08,576 - mmdet - INFO - Epoch [1][450/518]	lr: 1.258e-03, eta: 1:39:37, time: 0.573, data_time: 0.010, memory: 9036, loss_cls: 0.2420, loss_bbox: 0.6472, loss_dir: 0.1153, loss: 1.0044, grad_norm: 3.4174
2023-02-17 17:27:36,177 - mmdet - INFO - Epoch [1][500/518]	lr: 1.318e-03, eta: 1:38:16, time: 0.552, data_time: 0.010, memory: 9036, loss_cls: 0.2373, loss_bbox: 0.6512, loss_dir: 0.1160, loss: 1.0045, grad_norm: 3.4774
2023-02-17 17:28:33,505 - mmdet - INFO - Epoch [2][50/518]	lr: 1.409e-03, eta: 1:39:24, time: 0.939, data_time: 0.358, memory: 9036, loss_cls: 0.2332, loss_bbox: 0.6514, loss_dir: 0.1147, loss: 0.9993, grad_norm: 3.7869
2023-02-17 17:29:00,916 - mmdet - INFO - Epoch [2][100/518]	lr: 1.483e-03, eta: 1:38:06, time: 0.548, data_time: 0.011, memory: 9037, loss_cls: 0.2265, loss_bbox: 0.6439, loss_dir: 0.1154, loss: 0.9858, grad_norm: 3.9752
2023-02-17 17:29:28,335 - mmdet - INFO - Epoch [2][150/518]	lr: 1.563e-03, eta: 1:36:55, time: 0.548, data_time: 0.010, memory: 9037, loss_cls: 0.2211, loss_bbox: 0.6192, loss_dir: 0.1150, loss: 0.9554, grad_norm: 3.8087
2023-02-17 17:29:56,516 - mmdet - INFO - Epoch [2][200/518]	lr: 1.649e-03, eta: 1:36:01, time: 0.564, data_time: 0.010, memory: 9037, loss_cls: 0.2197, loss_bbox: 0.6176, loss_dir: 0.1136, loss: 0.9509, grad_norm: 3.3317
2023-02-17 17:30:24,052 - mmdet - INFO - Epoch [2][250/518]	lr: 1.740e-03, eta: 1:35:01, time: 0.551, data_time: 0.010, memory: 9037, loss_cls: 0.2149, loss_bbox: 0.6133, loss_dir: 0.1134, loss: 0.9417, grad_norm: 3.4486
2023-02-17 17:30:51,440 - mmdet - INFO - Epoch [2][300/518]	lr: 1.836e-03, eta: 1:34:04, time: 0.548, data_time: 0.010, memory: 9037, loss_cls: 0.2137, loss_bbox: 0.6074, loss_dir: 0.1126, loss: 0.9336, grad_norm: 2.9469
2023-02-17 17:31:18,584 - mmdet - INFO - Epoch [2][350/518]	lr: 1.938e-03, eta: 1:33:08, time: 0.543, data_time: 0.010, memory: 9037, loss_cls: 0.2064, loss_bbox: 0.5867, loss_dir: 0.1113, loss: 0.9043, grad_norm: 3.4978
2023-02-17 17:31:46,152 - mmdet - INFO - Epoch [2][400/518]	lr: 2.044e-03, eta: 1:32:20, time: 0.551, data_time: 0.011, memory: 9037, loss_cls: 0.2092, loss_bbox: 0.5953, loss_dir: 0.1115, loss: 0.9160, grad_norm: 3.3047
2023-02-17 17:32:13,720 - mmdet - INFO - Epoch [2][450/518]	lr: 2.156e-03, eta: 1:31:33, time: 0.551, data_time: 0.010, memory: 9037, loss_cls: 0.2025, loss_bbox: 0.5677, loss_dir: 0.1104, loss: 0.8806, grad_norm: 2.7728
2023-02-17 17:32:41,308 - mmdet - INFO - Epoch [2][500/518]	lr: 2.273e-03, eta: 1:30:49, time: 0.552, data_time: 0.010, memory: 9041, loss_cls: 0.2032, loss_bbox: 0.5787, loss_dir: 0.1108, loss: 0.8928, grad_norm: 2.8530
2023-02-17 17:33:39,496 - mmdet - INFO - Epoch [3][50/518]	lr: 2.438e-03, eta: 1:31:21, time: 0.963, data_time: 0.329, memory: 9041, loss_cls: 0.2047, loss_bbox: 0.5844, loss_dir: 0.1091, loss: 0.8982, grad_norm: 2.6963
2023-02-17 17:34:06,461 - mmdet - INFO - Epoch [3][100/518]	lr: 2.566e-03, eta: 1:30:31, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.2026, loss_bbox: 0.5759, loss_dir: 0.1095, loss: 0.8881, grad_norm: 2.6318
2023-02-17 17:34:33,653 - mmdet - INFO - Epoch [3][150/518]	lr: 2.697e-03, eta: 1:29:44, time: 0.544, data_time: 0.010, memory: 9041, loss_cls: 0.1955, loss_bbox: 0.5494, loss_dir: 0.1080, loss: 0.8528, grad_norm: 2.5392
2023-02-17 17:35:00,670 - mmdet - INFO - Epoch [3][200/518]	lr: 2.832e-03, eta: 1:28:57, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1981, loss_bbox: 0.5609, loss_dir: 0.1085, loss: 0.8675, grad_norm: 2.4195
2023-02-17 17:35:27,715 - mmdet - INFO - Epoch [3][250/518]	lr: 2.972e-03, eta: 1:28:13, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1948, loss_bbox: 0.5531, loss_dir: 0.1062, loss: 0.8540, grad_norm: 2.0754
2023-02-17 17:35:54,495 - mmdet - INFO - Epoch [3][300/518]	lr: 3.115e-03, eta: 1:27:27, time: 0.536, data_time: 0.010, memory: 9041, loss_cls: 0.1928, loss_bbox: 0.5584, loss_dir: 0.1061, loss: 0.8573, grad_norm: 2.4796
2023-02-17 17:36:23,231 - mmdet - INFO - Epoch [3][350/518]	lr: 3.261e-03, eta: 1:26:56, time: 0.575, data_time: 0.011, memory: 9041, loss_cls: 0.1894, loss_bbox: 0.5409, loss_dir: 0.1048, loss: 0.8351, grad_norm: 2.1521
2023-02-17 17:36:53,090 - mmdet - INFO - Epoch [3][400/518]	lr: 3.410e-03, eta: 1:26:32, time: 0.597, data_time: 0.012, memory: 9041, loss_cls: 0.1930, loss_bbox: 0.5458, loss_dir: 0.1030, loss: 0.8418, grad_norm: 2.4462
2023-02-17 17:37:21,850 - mmdet - INFO - Epoch [3][450/518]	lr: 3.563e-03, eta: 1:26:01, time: 0.575, data_time: 0.011, memory: 9041, loss_cls: 0.1838, loss_bbox: 0.5198, loss_dir: 0.1018, loss: 0.8053, grad_norm: 1.8501
2023-02-17 17:37:48,957 - mmdet - INFO - Epoch [3][500/518]	lr: 3.718e-03, eta: 1:25:20, time: 0.542, data_time: 0.010, memory: 9041, loss_cls: 0.1854, loss_bbox: 0.5371, loss_dir: 0.1020, loss: 0.8245, grad_norm: 1.9859
2023-02-17 17:38:45,852 - mmdet - INFO - Epoch [4][50/518]	lr: 3.934e-03, eta: 1:25:21, time: 0.934, data_time: 0.343, memory: 9041, loss_cls: 0.1910, loss_bbox: 0.5488, loss_dir: 0.1001, loss: 0.8399, grad_norm: 2.0261
2023-02-17 17:39:12,963 - mmdet - INFO - Epoch [4][100/518]	lr: 4.095e-03, eta: 1:24:40, time: 0.542, data_time: 0.010, memory: 9041, loss_cls: 0.1863, loss_bbox: 0.5302, loss_dir: 0.0978, loss: 0.8144, grad_norm: 1.7812
2023-02-17 17:39:39,901 - mmdet - INFO - Epoch [4][150/518]	lr: 4.258e-03, eta: 1:23:59, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1832, loss_bbox: 0.5123, loss_dir: 0.0950, loss: 0.7905, grad_norm: 1.7827
2023-02-17 17:40:06,401 - mmdet - INFO - Epoch [4][200/518]	lr: 4.422e-03, eta: 1:23:18, time: 0.530, data_time: 0.010, memory: 9041, loss_cls: 0.1846, loss_bbox: 0.5221, loss_dir: 0.0938, loss: 0.8005, grad_norm: 1.6456
2023-02-17 17:40:34,145 - mmdet - INFO - Epoch [4][250/518]	lr: 4.589e-03, eta: 1:22:42, time: 0.555, data_time: 0.010, memory: 9041, loss_cls: 0.1815, loss_bbox: 0.5259, loss_dir: 0.0898, loss: 0.7972, grad_norm: 1.9817
2023-02-17 17:41:00,514 - mmdet - INFO - Epoch [4][300/518]	lr: 4.756e-03, eta: 1:22:01, time: 0.527, data_time: 0.009, memory: 9041, loss_cls: 0.1822, loss_bbox: 0.5185, loss_dir: 0.0909, loss: 0.7916, grad_norm: 1.5298
2023-02-17 17:41:27,564 - mmdet - INFO - Epoch [4][350/518]	lr: 4.925e-03, eta: 1:21:24, time: 0.541, data_time: 0.009, memory: 9041, loss_cls: 0.1763, loss_bbox: 0.5061, loss_dir: 0.0874, loss: 0.7697, grad_norm: 1.7451
2023-02-17 17:41:54,384 - mmdet - INFO - Epoch [4][400/518]	lr: 5.095e-03, eta: 1:20:46, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1757, loss_bbox: 0.5040, loss_dir: 0.0851, loss: 0.7648, grad_norm: 1.6433
2023-02-17 17:42:21,372 - mmdet - INFO - Epoch [4][450/518]	lr: 5.265e-03, eta: 1:20:10, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1772, loss_bbox: 0.5012, loss_dir: 0.0845, loss: 0.7629, grad_norm: 1.6661
2023-02-17 17:42:48,033 - mmdet - INFO - Epoch [4][500/518]	lr: 5.435e-03, eta: 1:19:32, time: 0.533, data_time: 0.009, memory: 9041, loss_cls: 0.1757, loss_bbox: 0.5007, loss_dir: 0.0836, loss: 0.7600, grad_norm: 1.4824
2023-02-17 17:43:45,281 - mmdet - INFO - Epoch [5][50/518]	lr: 5.667e-03, eta: 1:19:25, time: 0.942, data_time: 0.373, memory: 9041, loss_cls: 0.1801, loss_bbox: 0.5104, loss_dir: 0.0835, loss: 0.7741, grad_norm: 1.3674
2023-02-17 17:44:14,442 - mmdet - INFO - Epoch [5][100/518]	lr: 5.837e-03, eta: 1:18:57, time: 0.583, data_time: 0.011, memory: 9041, loss_cls: 0.1764, loss_bbox: 0.4991, loss_dir: 0.0815, loss: 0.7570, grad_norm: 1.2981
2023-02-17 17:44:41,929 - mmdet - INFO - Epoch [5][150/518]	lr: 6.007e-03, eta: 1:18:22, time: 0.550, data_time: 0.010, memory: 9041, loss_cls: 0.1710, loss_bbox: 0.4822, loss_dir: 0.0828, loss: 0.7360, grad_norm: 1.3650
2023-02-17 17:45:08,852 - mmdet - INFO - Epoch [5][200/518]	lr: 6.176e-03, eta: 1:17:46, time: 0.538, data_time: 0.009, memory: 9041, loss_cls: 0.1731, loss_bbox: 0.5019, loss_dir: 0.0820, loss: 0.7570, grad_norm: 1.4434
2023-02-17 17:45:35,862 - mmdet - INFO - Epoch [5][250/518]	lr: 6.344e-03, eta: 1:17:11, time: 0.540, data_time: 0.009, memory: 9041, loss_cls: 0.1721, loss_bbox: 0.4918, loss_dir: 0.0791, loss: 0.7430, grad_norm: 1.3022
2023-02-17 17:46:02,971 - mmdet - INFO - Epoch [5][300/518]	lr: 6.511e-03, eta: 1:16:37, time: 0.542, data_time: 0.010, memory: 9041, loss_cls: 0.1710, loss_bbox: 0.4878, loss_dir: 0.0781, loss: 0.7369, grad_norm: 1.2954
2023-02-17 17:46:31,076 - mmdet - INFO - Epoch [5][350/518]	lr: 6.677e-03, eta: 1:16:06, time: 0.562, data_time: 0.009, memory: 9041, loss_cls: 0.1680, loss_bbox: 0.4768, loss_dir: 0.0769, loss: 0.7217, grad_norm: 1.2675
2023-02-17 17:46:58,263 - mmdet - INFO - Epoch [5][400/518]	lr: 6.841e-03, eta: 1:15:32, time: 0.544, data_time: 0.010, memory: 9041, loss_cls: 0.1689, loss_bbox: 0.4812, loss_dir: 0.0773, loss: 0.7274, grad_norm: 1.3172
2023-02-17 17:47:25,191 - mmdet - INFO - Epoch [5][450/518]	lr: 7.002e-03, eta: 1:14:58, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1639, loss_bbox: 0.4693, loss_dir: 0.0739, loss: 0.7071, grad_norm: 1.2834
2023-02-17 17:47:51,986 - mmdet - INFO - Epoch [5][500/518]	lr: 7.162e-03, eta: 1:14:23, time: 0.536, data_time: 0.010, memory: 9041, loss_cls: 0.1667, loss_bbox: 0.4800, loss_dir: 0.0741, loss: 0.7208, grad_norm: 1.3146
2023-02-17 17:48:49,145 - mmdet - INFO - Epoch [6][50/518]	lr: 7.375e-03, eta: 1:14:07, time: 0.939, data_time: 0.405, memory: 9041, loss_cls: 0.1674, loss_bbox: 0.4862, loss_dir: 0.0754, loss: 0.7290, grad_norm: 1.2285
2023-02-17 17:49:15,887 - mmdet - INFO - Epoch [6][100/518]	lr: 7.529e-03, eta: 1:13:33, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1654, loss_bbox: 0.4776, loss_dir: 0.0752, loss: 0.7182, grad_norm: 1.1729
2023-02-17 17:49:43,398 - mmdet - INFO - Epoch [6][150/518]	lr: 7.680e-03, eta: 1:13:01, time: 0.550, data_time: 0.010, memory: 9041, loss_cls: 0.1609, loss_bbox: 0.4531, loss_dir: 0.0743, loss: 0.6882, grad_norm: 1.1281
2023-02-17 17:50:11,246 - mmdet - INFO - Epoch [6][200/518]	lr: 7.827e-03, eta: 1:12:29, time: 0.557, data_time: 0.010, memory: 9041, loss_cls: 0.1625, loss_bbox: 0.4631, loss_dir: 0.0718, loss: 0.6974, grad_norm: 1.1253
2023-02-17 17:50:38,962 - mmdet - INFO - Epoch [6][250/518]	lr: 7.972e-03, eta: 1:11:58, time: 0.554, data_time: 0.010, memory: 9041, loss_cls: 0.1623, loss_bbox: 0.4635, loss_dir: 0.0718, loss: 0.6976, grad_norm: 1.1400
2023-02-17 17:51:06,823 - mmdet - INFO - Epoch [6][300/518]	lr: 8.112e-03, eta: 1:11:27, time: 0.557, data_time: 0.010, memory: 9041, loss_cls: 0.1635, loss_bbox: 0.4721, loss_dir: 0.0721, loss: 0.7076, grad_norm: 1.1327
2023-02-17 17:51:34,396 - mmdet - INFO - Epoch [6][350/518]	lr: 8.249e-03, eta: 1:10:55, time: 0.551, data_time: 0.010, memory: 9041, loss_cls: 0.1593, loss_bbox: 0.4588, loss_dir: 0.0714, loss: 0.6896, grad_norm: 1.0706
2023-02-17 17:52:01,456 - mmdet - INFO - Epoch [6][400/518]	lr: 8.382e-03, eta: 1:10:23, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1582, loss_bbox: 0.4527, loss_dir: 0.0687, loss: 0.6796, grad_norm: 1.1059
2023-02-17 17:52:28,412 - mmdet - INFO - Epoch [6][450/518]	lr: 8.511e-03, eta: 1:09:50, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1569, loss_bbox: 0.4490, loss_dir: 0.0681, loss: 0.6740, grad_norm: 1.1344
2023-02-17 17:52:56,034 - mmdet - INFO - Epoch [6][500/518]	lr: 8.636e-03, eta: 1:09:19, time: 0.552, data_time: 0.010, memory: 9041, loss_cls: 0.1602, loss_bbox: 0.4574, loss_dir: 0.0693, loss: 0.6869, grad_norm: 1.0993
2023-02-17 17:53:53,426 - mmdet - INFO - Epoch [7][50/518]	lr: 8.798e-03, eta: 1:08:59, time: 0.943, data_time: 0.361, memory: 9041, loss_cls: 0.1575, loss_bbox: 0.4560, loss_dir: 0.0708, loss: 0.6843, grad_norm: 1.1266
2023-02-17 17:54:21,563 - mmdet - INFO - Epoch [7][100/518]	lr: 8.912e-03, eta: 1:08:29, time: 0.563, data_time: 0.010, memory: 9041, loss_cls: 0.1562, loss_bbox: 0.4458, loss_dir: 0.0688, loss: 0.6709, grad_norm: 1.0138
2023-02-17 17:54:49,503 - mmdet - INFO - Epoch [7][150/518]	lr: 9.020e-03, eta: 1:07:58, time: 0.559, data_time: 0.010, memory: 9041, loss_cls: 0.1530, loss_bbox: 0.4361, loss_dir: 0.0684, loss: 0.6574, grad_norm: 1.0498
2023-02-17 17:55:16,954 - mmdet - INFO - Epoch [7][200/518]	lr: 9.124e-03, eta: 1:07:27, time: 0.549, data_time: 0.010, memory: 9041, loss_cls: 0.1561, loss_bbox: 0.4469, loss_dir: 0.0683, loss: 0.6714, grad_norm: 1.0385
2023-02-17 17:55:44,332 - mmdet - INFO - Epoch [7][250/518]	lr: 9.223e-03, eta: 1:06:56, time: 0.548, data_time: 0.009, memory: 9041, loss_cls: 0.1560, loss_bbox: 0.4453, loss_dir: 0.0680, loss: 0.6693, grad_norm: 1.0538
2023-02-17 17:56:11,878 - mmdet - INFO - Epoch [7][300/518]	lr: 9.316e-03, eta: 1:06:25, time: 0.551, data_time: 0.009, memory: 9041, loss_cls: 0.1572, loss_bbox: 0.4512, loss_dir: 0.0667, loss: 0.6751, grad_norm: 1.0195
2023-02-17 17:56:38,893 - mmdet - INFO - Epoch [7][350/518]	lr: 9.403e-03, eta: 1:05:53, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1529, loss_bbox: 0.4282, loss_dir: 0.0675, loss: 0.6486, grad_norm: 0.9928
2023-02-17 17:57:05,866 - mmdet - INFO - Epoch [7][400/518]	lr: 9.485e-03, eta: 1:05:21, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1497, loss_bbox: 0.4336, loss_dir: 0.0649, loss: 0.6482, grad_norm: 0.9509
2023-02-17 17:57:33,073 - mmdet - INFO - Epoch [7][450/518]	lr: 9.562e-03, eta: 1:04:49, time: 0.544, data_time: 0.010, memory: 9041, loss_cls: 0.1517, loss_bbox: 0.4245, loss_dir: 0.0637, loss: 0.6399, grad_norm: 1.1317
2023-02-17 17:58:00,438 - mmdet - INFO - Epoch [7][500/518]	lr: 9.632e-03, eta: 1:04:19, time: 0.547, data_time: 0.010, memory: 9041, loss_cls: 0.1539, loss_bbox: 0.4339, loss_dir: 0.0647, loss: 0.6525, grad_norm: 0.9425
2023-02-17 17:58:57,275 - mmdet - INFO - Epoch [8][50/518]	lr: 9.719e-03, eta: 1:03:54, time: 0.933, data_time: 0.283, memory: 9041, loss_cls: 0.1519, loss_bbox: 0.4335, loss_dir: 0.0654, loss: 0.6508, grad_norm: 1.0656
2023-02-17 17:59:24,755 - mmdet - INFO - Epoch [8][100/518]	lr: 9.775e-03, eta: 1:03:23, time: 0.550, data_time: 0.010, memory: 9041, loss_cls: 0.1546, loss_bbox: 0.4356, loss_dir: 0.0662, loss: 0.6565, grad_norm: 0.9471
2023-02-17 17:59:51,104 - mmdet - INFO - Epoch [8][150/518]	lr: 9.825e-03, eta: 1:02:50, time: 0.527, data_time: 0.009, memory: 9041, loss_cls: 0.1479, loss_bbox: 0.4134, loss_dir: 0.0653, loss: 0.6266, grad_norm: 0.8922
2023-02-17 18:00:17,880 - mmdet - INFO - Epoch [8][200/518]	lr: 9.869e-03, eta: 1:02:18, time: 0.535, data_time: 0.009, memory: 9041, loss_cls: 0.1503, loss_bbox: 0.4228, loss_dir: 0.0643, loss: 0.6375, grad_norm: 0.9292
2023-02-17 18:00:44,371 - mmdet - INFO - Epoch [8][250/518]	lr: 9.907e-03, eta: 1:01:46, time: 0.530, data_time: 0.009, memory: 9041, loss_cls: 0.1513, loss_bbox: 0.4272, loss_dir: 0.0647, loss: 0.6433, grad_norm: 0.9711
2023-02-17 18:01:11,501 - mmdet - INFO - Epoch [8][300/518]	lr: 9.938e-03, eta: 1:01:15, time: 0.543, data_time: 0.010, memory: 9041, loss_cls: 0.1483, loss_bbox: 0.4211, loss_dir: 0.0619, loss: 0.6313, grad_norm: 0.9674
2023-02-17 18:01:38,508 - mmdet - INFO - Epoch [8][350/518]	lr: 9.963e-03, eta: 1:00:44, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1473, loss_bbox: 0.4154, loss_dir: 0.0633, loss: 0.6260, grad_norm: 0.9003
2023-02-17 18:02:05,163 - mmdet - INFO - Epoch [8][400/518]	lr: 9.982e-03, eta: 1:00:13, time: 0.533, data_time: 0.010, memory: 9041, loss_cls: 0.1487, loss_bbox: 0.4275, loss_dir: 0.0627, loss: 0.6389, grad_norm: 1.1095
2023-02-17 18:02:32,148 - mmdet - INFO - Epoch [8][450/518]	lr: 9.994e-03, eta: 0:59:42, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1437, loss_bbox: 0.3967, loss_dir: 0.0591, loss: 0.5994, grad_norm: 0.8059
2023-02-17 18:02:59,253 - mmdet - INFO - Epoch [8][500/518]	lr: 1.000e-02, eta: 0:59:11, time: 0.542, data_time: 0.010, memory: 9041, loss_cls: 0.1489, loss_bbox: 0.4154, loss_dir: 0.0638, loss: 0.6281, grad_norm: 0.8991
2023-02-17 18:03:55,867 - mmdet - INFO - Epoch [9][50/518]	lr: 9.998e-03, eta: 0:58:44, time: 0.929, data_time: 0.325, memory: 9041, loss_cls: 0.1490, loss_bbox: 0.4248, loss_dir: 0.0633, loss: 0.6370, grad_norm: 0.9355
2023-02-17 18:04:22,739 - mmdet - INFO - Epoch [9][100/518]	lr: 9.994e-03, eta: 0:58:13, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1490, loss_bbox: 0.4150, loss_dir: 0.0607, loss: 0.6247, grad_norm: 0.9332
2023-02-17 18:04:49,616 - mmdet - INFO - Epoch [9][150/518]	lr: 9.986e-03, eta: 0:57:42, time: 0.537, data_time: 0.009, memory: 9041, loss_cls: 0.1410, loss_bbox: 0.3946, loss_dir: 0.0629, loss: 0.5985, grad_norm: 0.8591
2023-02-17 18:05:16,794 - mmdet - INFO - Epoch [9][200/518]	lr: 9.975e-03, eta: 0:57:11, time: 0.544, data_time: 0.010, memory: 9041, loss_cls: 0.1422, loss_bbox: 0.4055, loss_dir: 0.0601, loss: 0.6078, grad_norm: 0.8590
2023-02-17 18:05:43,451 - mmdet - INFO - Epoch [9][250/518]	lr: 9.960e-03, eta: 0:56:40, time: 0.533, data_time: 0.009, memory: 9041, loss_cls: 0.1451, loss_bbox: 0.4071, loss_dir: 0.0601, loss: 0.6123, grad_norm: 0.9538
2023-02-17 18:06:10,495 - mmdet - INFO - Epoch [9][300/518]	lr: 9.943e-03, eta: 0:56:10, time: 0.541, data_time: 0.009, memory: 9041, loss_cls: 0.1438, loss_bbox: 0.4070, loss_dir: 0.0594, loss: 0.6102, grad_norm: 0.8458
2023-02-17 18:06:37,321 - mmdet - INFO - Epoch [9][350/518]	lr: 9.922e-03, eta: 0:55:39, time: 0.537, data_time: 0.009, memory: 9041, loss_cls: 0.1415, loss_bbox: 0.3992, loss_dir: 0.0592, loss: 0.5999, grad_norm: 0.9121
2023-02-17 18:07:04,565 - mmdet - INFO - Epoch [9][400/518]	lr: 9.899e-03, eta: 0:55:09, time: 0.545, data_time: 0.010, memory: 9041, loss_cls: 0.1425, loss_bbox: 0.4048, loss_dir: 0.0591, loss: 0.6064, grad_norm: 0.7342
2023-02-17 18:07:31,248 - mmdet - INFO - Epoch [9][450/518]	lr: 9.872e-03, eta: 0:54:39, time: 0.534, data_time: 0.010, memory: 9041, loss_cls: 0.1403, loss_bbox: 0.3898, loss_dir: 0.0564, loss: 0.5865, grad_norm: 0.9309
2023-02-17 18:07:57,968 - mmdet - INFO - Epoch [9][500/518]	lr: 9.842e-03, eta: 0:54:08, time: 0.535, data_time: 0.009, memory: 9041, loss_cls: 0.1424, loss_bbox: 0.3970, loss_dir: 0.0579, loss: 0.5973, grad_norm: 0.9650
2023-02-17 18:08:53,715 - mmdet - INFO - Epoch [10][50/518]	lr: 9.796e-03, eta: 0:53:38, time: 0.913, data_time: 0.369, memory: 9041, loss_cls: 0.1422, loss_bbox: 0.4009, loss_dir: 0.0598, loss: 0.6029, grad_norm: 0.8726
2023-02-17 18:09:20,790 - mmdet - INFO - Epoch [10][100/518]	lr: 9.759e-03, eta: 0:53:08, time: 0.541, data_time: 0.011, memory: 9041, loss_cls: 0.1415, loss_bbox: 0.3983, loss_dir: 0.0594, loss: 0.5993, grad_norm: 0.8283
2023-02-17 18:09:47,634 - mmdet - INFO - Epoch [10][150/518]	lr: 9.719e-03, eta: 0:52:37, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1365, loss_bbox: 0.3831, loss_dir: 0.0572, loss: 0.5769, grad_norm: 0.8767
2023-02-17 18:10:14,501 - mmdet - INFO - Epoch [10][200/518]	lr: 9.675e-03, eta: 0:52:07, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1399, loss_bbox: 0.3932, loss_dir: 0.0572, loss: 0.5903, grad_norm: 0.8287
2023-02-17 18:10:41,674 - mmdet - INFO - Epoch [10][250/518]	lr: 9.629e-03, eta: 0:51:37, time: 0.543, data_time: 0.010, memory: 9041, loss_cls: 0.1397, loss_bbox: 0.3886, loss_dir: 0.0561, loss: 0.5845, grad_norm: 0.8275
2023-02-17 18:11:08,668 - mmdet - INFO - Epoch [10][300/518]	lr: 9.580e-03, eta: 0:51:07, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1383, loss_bbox: 0.3907, loss_dir: 0.0571, loss: 0.5861, grad_norm: 0.8676
2023-02-17 18:11:35,228 - mmdet - INFO - Epoch [10][350/518]	lr: 9.528e-03, eta: 0:50:37, time: 0.531, data_time: 0.009, memory: 9041, loss_cls: 0.1376, loss_bbox: 0.3797, loss_dir: 0.0569, loss: 0.5743, grad_norm: 0.7699
2023-02-17 18:12:02,008 - mmdet - INFO - Epoch [10][400/518]	lr: 9.473e-03, eta: 0:50:07, time: 0.536, data_time: 0.010, memory: 9041, loss_cls: 0.1363, loss_bbox: 0.3843, loss_dir: 0.0563, loss: 0.5769, grad_norm: 0.7234
2023-02-17 18:12:28,822 - mmdet - INFO - Epoch [10][450/518]	lr: 9.415e-03, eta: 0:49:37, time: 0.536, data_time: 0.010, memory: 9041, loss_cls: 0.1349, loss_bbox: 0.3690, loss_dir: 0.0538, loss: 0.5576, grad_norm: 0.7921
2023-02-17 18:12:55,666 - mmdet - INFO - Epoch [10][500/518]	lr: 9.354e-03, eta: 0:49:07, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1358, loss_bbox: 0.3792, loss_dir: 0.0562, loss: 0.5712, grad_norm: 0.7990
2023-02-17 18:13:05,619 - mmdet - INFO - Saving checkpoint at 10 epochs
2023-02-17 18:14:10,419 - mmdet - INFO - 
Pedestrian AP@0.50, 0.50, 0.50:
bbox AP:10.2928, 13.5908, 13.4248
bev  AP:11.4317, 12.7783, 12.7245
3d   AP:10.6103, 11.7617, 11.6841
aos  AP:5.25, 6.66, 6.58
Pedestrian AP@0.50, 0.25, 0.25:
bbox AP:10.2928, 13.5908, 13.4248
bev  AP:16.8680, 19.1854, 19.0523
3d   AP:16.4233, 18.9308, 18.7653
aos  AP:5.25, 6.66, 6.58
Cyclist AP@0.50, 0.50, 0.50:
bbox AP:34.2618, 32.7686, 32.8850
bev  AP:31.1596, 29.8144, 29.8319
3d   AP:28.4720, 26.2962, 26.3968
aos  AP:14.64, 14.17, 14.22
Cyclist AP@0.50, 0.25, 0.25:
bbox AP:34.2618, 32.7686, 32.8850
bev  AP:39.2693, 36.6728, 36.7155
3d   AP:39.0710, 36.4244, 36.4351
aos  AP:14.64, 14.17, 14.22
Car AP@0.70, 0.70, 0.70:
bbox AP:21.1843, 17.9032, 18.0712
bev  AP:66.6668, 50.7787, 50.6652
3d   AP:51.9904, 38.6594, 38.6042
aos  AP:10.58, 9.61, 9.72
Car AP@0.70, 0.50, 0.50:
bbox AP:21.1843, 17.9032, 18.0712
bev  AP:78.3918, 61.5681, 60.8126
3d   AP:76.6984, 59.9787, 60.0047
aos  AP:10.58, 9.61, 9.72

Overall AP@easy, moderate, hard:
bbox AP:21.9130, 21.4209, 21.4603
bev  AP:36.4193, 31.1238, 31.0739
3d   AP:30.3576, 25.5725, 25.5617
aos  AP:10.16, 10.15, 10.17

2023-02-17 18:14:10,459 - mmdet - INFO - Exp name: trainval_config_i.py
2023-02-17 18:14:10,461 - mmdet - INFO - Epoch(val) [10][453]	KITTI/Pedestrian_3D_easy_strict: 10.6103, KITTI/Pedestrian_BEV_easy_strict: 11.4317, KITTI/Pedestrian_2D_easy_strict: 10.2928, KITTI/Pedestrian_3D_moderate_strict: 11.7617, KITTI/Pedestrian_BEV_moderate_strict: 12.7783, KITTI/Pedestrian_2D_moderate_strict: 13.5908, KITTI/Pedestrian_3D_hard_strict: 11.6841, KITTI/Pedestrian_BEV_hard_strict: 12.7245, KITTI/Pedestrian_2D_hard_strict: 13.4248, KITTI/Pedestrian_3D_easy_loose: 16.4233, KITTI/Pedestrian_BEV_easy_loose: 16.8680, KITTI/Pedestrian_2D_easy_loose: 10.2928, KITTI/Pedestrian_3D_moderate_loose: 18.9308, KITTI/Pedestrian_BEV_moderate_loose: 19.1854, KITTI/Pedestrian_2D_moderate_loose: 13.5908, KITTI/Pedestrian_3D_hard_loose: 18.7653, KITTI/Pedestrian_BEV_hard_loose: 19.0523, KITTI/Pedestrian_2D_hard_loose: 13.4248, KITTI/Cyclist_3D_easy_strict: 28.4720, KITTI/Cyclist_BEV_easy_strict: 31.1596, KITTI/Cyclist_2D_easy_strict: 34.2618, KITTI/Cyclist_3D_moderate_strict: 26.2962, KITTI/Cyclist_BEV_moderate_strict: 29.8144, KITTI/Cyclist_2D_moderate_strict: 32.7686, KITTI/Cyclist_3D_hard_strict: 26.3968, KITTI/Cyclist_BEV_hard_strict: 29.8319, KITTI/Cyclist_2D_hard_strict: 32.8850, KITTI/Cyclist_3D_easy_loose: 39.0710, KITTI/Cyclist_BEV_easy_loose: 39.2693, KITTI/Cyclist_2D_easy_loose: 34.2618, KITTI/Cyclist_3D_moderate_loose: 36.4244, KITTI/Cyclist_BEV_moderate_loose: 36.6728, KITTI/Cyclist_2D_moderate_loose: 32.7686, KITTI/Cyclist_3D_hard_loose: 36.4351, KITTI/Cyclist_BEV_hard_loose: 36.7155, KITTI/Cyclist_2D_hard_loose: 32.8850, KITTI/Car_3D_easy_strict: 51.9904, KITTI/Car_BEV_easy_strict: 66.6668, KITTI/Car_2D_easy_strict: 21.1843, KITTI/Car_3D_moderate_strict: 38.6594, KITTI/Car_BEV_moderate_strict: 50.7787, KITTI/Car_2D_moderate_strict: 17.9032, KITTI/Car_3D_hard_strict: 38.6042, KITTI/Car_BEV_hard_strict: 50.6652, KITTI/Car_2D_hard_strict: 18.0712, KITTI/Car_3D_easy_loose: 76.6984, KITTI/Car_BEV_easy_loose: 78.3918, KITTI/Car_2D_easy_loose: 21.1843, KITTI/Car_3D_moderate_loose: 59.9787, KITTI/Car_BEV_moderate_loose: 61.5681, KITTI/Car_2D_moderate_loose: 17.9032, KITTI/Car_3D_hard_loose: 60.0047, KITTI/Car_BEV_hard_loose: 60.8126, KITTI/Car_2D_hard_loose: 18.0712, KITTI/Overall_3D_easy: 30.3576, KITTI/Overall_BEV_easy: 36.4193, KITTI/Overall_2D_easy: 21.9130, KITTI/Overall_3D_moderate: 25.5725, KITTI/Overall_BEV_moderate: 31.1238, KITTI/Overall_2D_moderate: 21.4209, KITTI/Overall_3D_hard: 25.5617, KITTI/Overall_BEV_hard: 31.0739, KITTI/Overall_2D_hard: 21.4603
2023-02-17 18:14:50,637 - mmdet - INFO - Epoch [11][50/518]	lr: 9.267e-03, eta: 0:48:30, time: 0.803, data_time: 0.276, memory: 9041, loss_cls: 0.1381, loss_bbox: 0.3823, loss_dir: 0.0570, loss: 0.5773, grad_norm: 0.8589
2023-02-17 18:15:17,975 - mmdet - INFO - Epoch [11][100/518]	lr: 9.200e-03, eta: 0:48:00, time: 0.547, data_time: 0.010, memory: 9041, loss_cls: 0.1367, loss_bbox: 0.3830, loss_dir: 0.0561, loss: 0.5759, grad_norm: 0.7521
2023-02-17 18:15:44,988 - mmdet - INFO - Epoch [11][150/518]	lr: 9.130e-03, eta: 0:47:31, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1336, loss_bbox: 0.3700, loss_dir: 0.0569, loss: 0.5606, grad_norm: 0.6890
2023-02-17 18:16:11,958 - mmdet - INFO - Epoch [11][200/518]	lr: 9.057e-03, eta: 0:47:01, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1352, loss_bbox: 0.3807, loss_dir: 0.0560, loss: 0.5719, grad_norm: 0.8054
2023-02-17 18:16:39,061 - mmdet - INFO - Epoch [11][250/518]	lr: 8.982e-03, eta: 0:46:32, time: 0.542, data_time: 0.009, memory: 9041, loss_cls: 0.1347, loss_bbox: 0.3763, loss_dir: 0.0542, loss: 0.5652, grad_norm: 0.8073
2023-02-17 18:17:05,984 - mmdet - INFO - Epoch [11][300/518]	lr: 8.904e-03, eta: 0:46:02, time: 0.538, data_time: 0.010, memory: 9041, loss_cls: 0.1339, loss_bbox: 0.3744, loss_dir: 0.0544, loss: 0.5627, grad_norm: 0.8260
2023-02-17 18:17:32,730 - mmdet - INFO - Epoch [11][350/518]	lr: 8.824e-03, eta: 0:45:33, time: 0.535, data_time: 0.009, memory: 9041, loss_cls: 0.1337, loss_bbox: 0.3677, loss_dir: 0.0540, loss: 0.5555, grad_norm: 0.7542
2023-02-17 18:18:00,295 - mmdet - INFO - Epoch [11][400/518]	lr: 8.742e-03, eta: 0:45:04, time: 0.551, data_time: 0.010, memory: 9041, loss_cls: 0.1338, loss_bbox: 0.3736, loss_dir: 0.0548, loss: 0.5622, grad_norm: 0.8305
2023-02-17 18:18:27,824 - mmdet - INFO - Epoch [11][450/518]	lr: 8.657e-03, eta: 0:44:35, time: 0.551, data_time: 0.009, memory: 9041, loss_cls: 0.1299, loss_bbox: 0.3589, loss_dir: 0.0523, loss: 0.5412, grad_norm: 0.7910
2023-02-17 18:18:54,851 - mmdet - INFO - Epoch [11][500/518]	lr: 8.569e-03, eta: 0:44:05, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1324, loss_bbox: 0.3615, loss_dir: 0.0544, loss: 0.5483, grad_norm: 0.7103
2023-02-17 18:19:50,393 - mmdet - INFO - Epoch [12][50/518]	lr: 8.447e-03, eta: 0:43:32, time: 0.904, data_time: 0.308, memory: 9041, loss_cls: 0.1341, loss_bbox: 0.3761, loss_dir: 0.0551, loss: 0.5653, grad_norm: 0.8132
2023-02-17 18:20:17,094 - mmdet - INFO - Epoch [12][100/518]	lr: 8.354e-03, eta: 0:43:03, time: 0.534, data_time: 0.009, memory: 9041, loss_cls: 0.1326, loss_bbox: 0.3666, loss_dir: 0.0534, loss: 0.5526, grad_norm: 0.8406
2023-02-17 18:20:44,867 - mmdet - INFO - Epoch [12][150/518]	lr: 8.260e-03, eta: 0:42:34, time: 0.555, data_time: 0.010, memory: 9041, loss_cls: 0.1287, loss_bbox: 0.3524, loss_dir: 0.0542, loss: 0.5353, grad_norm: 0.6557
2023-02-17 18:21:12,002 - mmdet - INFO - Epoch [12][200/518]	lr: 8.163e-03, eta: 0:42:05, time: 0.543, data_time: 0.010, memory: 9041, loss_cls: 0.1314, loss_bbox: 0.3677, loss_dir: 0.0516, loss: 0.5508, grad_norm: 0.8069
2023-02-17 18:21:39,019 - mmdet - INFO - Epoch [12][250/518]	lr: 8.064e-03, eta: 0:41:36, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1282, loss_bbox: 0.3597, loss_dir: 0.0531, loss: 0.5409, grad_norm: 0.6869
2023-02-17 18:22:05,964 - mmdet - INFO - Epoch [12][300/518]	lr: 7.963e-03, eta: 0:41:06, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1301, loss_bbox: 0.3577, loss_dir: 0.0515, loss: 0.5393, grad_norm: 0.8399
2023-02-17 18:22:32,685 - mmdet - INFO - Epoch [12][350/518]	lr: 7.860e-03, eta: 0:40:37, time: 0.535, data_time: 0.009, memory: 9041, loss_cls: 0.1271, loss_bbox: 0.3517, loss_dir: 0.0509, loss: 0.5298, grad_norm: 0.6911
2023-02-17 18:22:59,441 - mmdet - INFO - Epoch [12][400/518]	lr: 7.756e-03, eta: 0:40:08, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1304, loss_bbox: 0.3599, loss_dir: 0.0521, loss: 0.5425, grad_norm: 0.7156
2023-02-17 18:23:26,168 - mmdet - INFO - Epoch [12][450/518]	lr: 7.649e-03, eta: 0:39:38, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1275, loss_bbox: 0.3466, loss_dir: 0.0506, loss: 0.5247, grad_norm: 0.6446
2023-02-17 18:23:53,408 - mmdet - INFO - Epoch [12][500/518]	lr: 7.541e-03, eta: 0:39:09, time: 0.545, data_time: 0.009, memory: 9041, loss_cls: 0.1283, loss_bbox: 0.3453, loss_dir: 0.0499, loss: 0.5235, grad_norm: 0.6479
2023-02-17 18:24:48,967 - mmdet - INFO - Epoch [13][50/518]	lr: 7.392e-03, eta: 0:38:36, time: 0.909, data_time: 0.305, memory: 9041, loss_cls: 0.1306, loss_bbox: 0.3611, loss_dir: 0.0526, loss: 0.5443, grad_norm: 0.7731
2023-02-17 18:25:15,898 - mmdet - INFO - Epoch [13][100/518]	lr: 7.280e-03, eta: 0:38:06, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1290, loss_bbox: 0.3561, loss_dir: 0.0516, loss: 0.5367, grad_norm: 0.7219
2023-02-17 18:25:42,630 - mmdet - INFO - Epoch [13][150/518]	lr: 7.167e-03, eta: 0:37:37, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1245, loss_bbox: 0.3399, loss_dir: 0.0513, loss: 0.5157, grad_norm: 0.6898
2023-02-17 18:26:09,526 - mmdet - INFO - Epoch [13][200/518]	lr: 7.053e-03, eta: 0:37:08, time: 0.538, data_time: 0.009, memory: 9041, loss_cls: 0.1270, loss_bbox: 0.3513, loss_dir: 0.0504, loss: 0.5287, grad_norm: 0.7628
2023-02-17 18:26:36,305 - mmdet - INFO - Epoch [13][250/518]	lr: 6.937e-03, eta: 0:36:39, time: 0.536, data_time: 0.010, memory: 9041, loss_cls: 0.1264, loss_bbox: 0.3460, loss_dir: 0.0504, loss: 0.5227, grad_norm: 0.7195
2023-02-17 18:27:03,344 - mmdet - INFO - Epoch [13][300/518]	lr: 6.820e-03, eta: 0:36:10, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1257, loss_bbox: 0.3506, loss_dir: 0.0490, loss: 0.5253, grad_norm: 0.6933
2023-02-17 18:27:30,233 - mmdet - INFO - Epoch [13][350/518]	lr: 6.701e-03, eta: 0:35:41, time: 0.538, data_time: 0.010, memory: 9041, loss_cls: 0.1250, loss_bbox: 0.3415, loss_dir: 0.0505, loss: 0.5170, grad_norm: 0.6212
2023-02-17 18:27:57,321 - mmdet - INFO - Epoch [13][400/518]	lr: 6.582e-03, eta: 0:35:12, time: 0.542, data_time: 0.010, memory: 9041, loss_cls: 0.1250, loss_bbox: 0.3429, loss_dir: 0.0491, loss: 0.5169, grad_norm: 0.6409
2023-02-17 18:28:24,282 - mmdet - INFO - Epoch [13][450/518]	lr: 6.462e-03, eta: 0:34:43, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1247, loss_bbox: 0.3358, loss_dir: 0.0493, loss: 0.5098, grad_norm: 0.6501
2023-02-17 18:28:51,140 - mmdet - INFO - Epoch [13][500/518]	lr: 6.340e-03, eta: 0:34:14, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1264, loss_bbox: 0.3360, loss_dir: 0.0476, loss: 0.5101, grad_norm: 0.6682
2023-02-17 18:29:46,952 - mmdet - INFO - Epoch [14][50/518]	lr: 6.174e-03, eta: 0:33:40, time: 0.915, data_time: 0.285, memory: 9041, loss_cls: 0.1256, loss_bbox: 0.3439, loss_dir: 0.0506, loss: 0.5201, grad_norm: 0.6926
2023-02-17 18:30:13,825 - mmdet - INFO - Epoch [14][100/518]	lr: 6.051e-03, eta: 0:33:11, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1279, loss_bbox: 0.3443, loss_dir: 0.0488, loss: 0.5210, grad_norm: 0.7581
2023-02-17 18:30:40,710 - mmdet - INFO - Epoch [14][150/518]	lr: 5.927e-03, eta: 0:32:42, time: 0.538, data_time: 0.010, memory: 9041, loss_cls: 0.1206, loss_bbox: 0.3289, loss_dir: 0.0491, loss: 0.4987, grad_norm: 0.6451
2023-02-17 18:31:07,524 - mmdet - INFO - Epoch [14][200/518]	lr: 5.803e-03, eta: 0:32:13, time: 0.536, data_time: 0.010, memory: 9041, loss_cls: 0.1219, loss_bbox: 0.3347, loss_dir: 0.0474, loss: 0.5040, grad_norm: 0.6756
2023-02-17 18:31:34,564 - mmdet - INFO - Epoch [14][250/518]	lr: 5.678e-03, eta: 0:31:44, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1236, loss_bbox: 0.3370, loss_dir: 0.0481, loss: 0.5087, grad_norm: 0.6439
2023-02-17 18:32:01,729 - mmdet - INFO - Epoch [14][300/518]	lr: 5.552e-03, eta: 0:31:16, time: 0.543, data_time: 0.010, memory: 9041, loss_cls: 0.1226, loss_bbox: 0.3351, loss_dir: 0.0480, loss: 0.5057, grad_norm: 0.7416
2023-02-17 18:32:28,413 - mmdet - INFO - Epoch [14][350/518]	lr: 5.427e-03, eta: 0:30:47, time: 0.534, data_time: 0.009, memory: 9041, loss_cls: 0.1219, loss_bbox: 0.3284, loss_dir: 0.0462, loss: 0.4965, grad_norm: 0.5410
2023-02-17 18:32:55,396 - mmdet - INFO - Epoch [14][400/518]	lr: 5.301e-03, eta: 0:30:18, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1209, loss_bbox: 0.3301, loss_dir: 0.0467, loss: 0.4977, grad_norm: 0.5708
2023-02-17 18:33:22,174 - mmdet - INFO - Epoch [14][450/518]	lr: 5.174e-03, eta: 0:29:49, time: 0.536, data_time: 0.010, memory: 9041, loss_cls: 0.1193, loss_bbox: 0.3210, loss_dir: 0.0441, loss: 0.4844, grad_norm: 0.6869
2023-02-17 18:33:49,157 - mmdet - INFO - Epoch [14][500/518]	lr: 5.048e-03, eta: 0:29:20, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1211, loss_bbox: 0.3231, loss_dir: 0.0453, loss: 0.4895, grad_norm: 0.5742
2023-02-17 18:34:44,915 - mmdet - INFO - Epoch [15][50/518]	lr: 4.876e-03, eta: 0:28:45, time: 0.908, data_time: 0.363, memory: 9041, loss_cls: 0.1231, loss_bbox: 0.3365, loss_dir: 0.0488, loss: 0.5085, grad_norm: 0.7598
2023-02-17 18:35:11,897 - mmdet - INFO - Epoch [15][100/518]	lr: 4.750e-03, eta: 0:28:16, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1198, loss_bbox: 0.3282, loss_dir: 0.0469, loss: 0.4950, grad_norm: 0.7136
2023-02-17 18:35:39,016 - mmdet - INFO - Epoch [15][150/518]	lr: 4.624e-03, eta: 0:27:48, time: 0.542, data_time: 0.010, memory: 9041, loss_cls: 0.1187, loss_bbox: 0.3188, loss_dir: 0.0473, loss: 0.4849, grad_norm: 0.6010
2023-02-17 18:36:05,665 - mmdet - INFO - Epoch [15][200/518]	lr: 4.498e-03, eta: 0:27:19, time: 0.533, data_time: 0.010, memory: 9041, loss_cls: 0.1181, loss_bbox: 0.3233, loss_dir: 0.0455, loss: 0.4869, grad_norm: 0.6586
2023-02-17 18:36:32,527 - mmdet - INFO - Epoch [15][250/518]	lr: 4.372e-03, eta: 0:26:50, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1187, loss_bbox: 0.3261, loss_dir: 0.0462, loss: 0.4910, grad_norm: 0.7257
2023-02-17 18:36:59,503 - mmdet - INFO - Epoch [15][300/518]	lr: 4.247e-03, eta: 0:26:22, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1194, loss_bbox: 0.3242, loss_dir: 0.0459, loss: 0.4894, grad_norm: 0.5017
2023-02-17 18:37:26,741 - mmdet - INFO - Epoch [15][350/518]	lr: 4.123e-03, eta: 0:25:53, time: 0.545, data_time: 0.010, memory: 9041, loss_cls: 0.1195, loss_bbox: 0.3181, loss_dir: 0.0441, loss: 0.4817, grad_norm: 0.5754
2023-02-17 18:37:53,606 - mmdet - INFO - Epoch [15][400/518]	lr: 3.999e-03, eta: 0:25:24, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1172, loss_bbox: 0.3217, loss_dir: 0.0439, loss: 0.4828, grad_norm: 0.6001
2023-02-17 18:38:20,336 - mmdet - INFO - Epoch [15][450/518]	lr: 3.875e-03, eta: 0:24:56, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1149, loss_bbox: 0.3084, loss_dir: 0.0424, loss: 0.4657, grad_norm: 0.5976
2023-02-17 18:38:46,993 - mmdet - INFO - Epoch [15][500/518]	lr: 3.752e-03, eta: 0:24:27, time: 0.533, data_time: 0.009, memory: 9041, loss_cls: 0.1173, loss_bbox: 0.3141, loss_dir: 0.0446, loss: 0.4760, grad_norm: 0.5391
2023-02-17 18:39:42,414 - mmdet - INFO - Epoch [16][50/518]	lr: 3.587e-03, eta: 0:23:51, time: 0.908, data_time: 0.287, memory: 9041, loss_cls: 0.1183, loss_bbox: 0.3218, loss_dir: 0.0450, loss: 0.4851, grad_norm: 0.7822
2023-02-17 18:40:09,170 - mmdet - INFO - Epoch [16][100/518]	lr: 3.466e-03, eta: 0:23:23, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1184, loss_bbox: 0.3169, loss_dir: 0.0448, loss: 0.4801, grad_norm: 0.5200
2023-02-17 18:40:36,290 - mmdet - INFO - Epoch [16][150/518]	lr: 3.346e-03, eta: 0:22:54, time: 0.542, data_time: 0.010, memory: 9041, loss_cls: 0.1163, loss_bbox: 0.3099, loss_dir: 0.0449, loss: 0.4710, grad_norm: 0.6233
2023-02-17 18:41:03,039 - mmdet - INFO - Epoch [16][200/518]	lr: 3.228e-03, eta: 0:22:25, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1162, loss_bbox: 0.3172, loss_dir: 0.0445, loss: 0.4779, grad_norm: 0.6662
2023-02-17 18:41:29,751 - mmdet - INFO - Epoch [16][250/518]	lr: 3.110e-03, eta: 0:21:57, time: 0.534, data_time: 0.010, memory: 9041, loss_cls: 0.1144, loss_bbox: 0.3140, loss_dir: 0.0438, loss: 0.4723, grad_norm: 0.6970
2023-02-17 18:41:56,680 - mmdet - INFO - Epoch [16][300/518]	lr: 2.994e-03, eta: 0:21:28, time: 0.538, data_time: 0.009, memory: 9041, loss_cls: 0.1138, loss_bbox: 0.3097, loss_dir: 0.0427, loss: 0.4662, grad_norm: 0.4891
2023-02-17 18:42:23,701 - mmdet - INFO - Epoch [16][350/518]	lr: 2.879e-03, eta: 0:21:00, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1138, loss_bbox: 0.3050, loss_dir: 0.0430, loss: 0.4618, grad_norm: 0.5888
2023-02-17 18:42:51,200 - mmdet - INFO - Epoch [16][400/518]	lr: 2.765e-03, eta: 0:20:32, time: 0.550, data_time: 0.010, memory: 9041, loss_cls: 0.1154, loss_bbox: 0.3113, loss_dir: 0.0437, loss: 0.4704, grad_norm: 0.4886
2023-02-17 18:43:18,263 - mmdet - INFO - Epoch [16][450/518]	lr: 2.653e-03, eta: 0:20:03, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1117, loss_bbox: 0.3006, loss_dir: 0.0412, loss: 0.4535, grad_norm: 0.5461
2023-02-17 18:43:45,097 - mmdet - INFO - Epoch [16][500/518]	lr: 2.542e-03, eta: 0:19:35, time: 0.537, data_time: 0.009, memory: 9041, loss_cls: 0.1152, loss_bbox: 0.3052, loss_dir: 0.0419, loss: 0.4623, grad_norm: 0.5638
2023-02-17 18:44:41,592 - mmdet - INFO - Epoch [17][50/518]	lr: 2.394e-03, eta: 0:18:59, time: 0.928, data_time: 0.354, memory: 9041, loss_cls: 0.1146, loss_bbox: 0.3119, loss_dir: 0.0431, loss: 0.4696, grad_norm: 0.6769
2023-02-17 18:45:08,630 - mmdet - INFO - Epoch [17][100/518]	lr: 2.287e-03, eta: 0:18:30, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1146, loss_bbox: 0.3082, loss_dir: 0.0430, loss: 0.4657, grad_norm: 0.5039
2023-02-17 18:45:35,879 - mmdet - INFO - Epoch [17][150/518]	lr: 2.181e-03, eta: 0:18:02, time: 0.545, data_time: 0.010, memory: 9041, loss_cls: 0.1128, loss_bbox: 0.2940, loss_dir: 0.0438, loss: 0.4506, grad_norm: 0.5837
2023-02-17 18:46:02,936 - mmdet - INFO - Epoch [17][200/518]	lr: 2.078e-03, eta: 0:17:33, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1124, loss_bbox: 0.3030, loss_dir: 0.0414, loss: 0.4568, grad_norm: 0.5540
2023-02-17 18:46:30,203 - mmdet - INFO - Epoch [17][250/518]	lr: 1.976e-03, eta: 0:17:05, time: 0.545, data_time: 0.010, memory: 9041, loss_cls: 0.1115, loss_bbox: 0.2993, loss_dir: 0.0419, loss: 0.4527, grad_norm: 0.4482
2023-02-17 18:46:57,051 - mmdet - INFO - Epoch [17][300/518]	lr: 1.877e-03, eta: 0:16:37, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1116, loss_bbox: 0.3044, loss_dir: 0.0415, loss: 0.4575, grad_norm: 0.5812
2023-02-17 18:47:24,345 - mmdet - INFO - Epoch [17][350/518]	lr: 1.779e-03, eta: 0:16:08, time: 0.546, data_time: 0.010, memory: 9041, loss_cls: 0.1118, loss_bbox: 0.2942, loss_dir: 0.0410, loss: 0.4470, grad_norm: 0.5346
2023-02-17 18:47:51,014 - mmdet - INFO - Epoch [17][400/518]	lr: 1.683e-03, eta: 0:15:40, time: 0.533, data_time: 0.010, memory: 9041, loss_cls: 0.1119, loss_bbox: 0.3018, loss_dir: 0.0417, loss: 0.4553, grad_norm: 0.5315
2023-02-17 18:48:17,962 - mmdet - INFO - Epoch [17][450/518]	lr: 1.590e-03, eta: 0:15:12, time: 0.539, data_time: 0.009, memory: 9041, loss_cls: 0.1093, loss_bbox: 0.2890, loss_dir: 0.0393, loss: 0.4376, grad_norm: 0.4772
2023-02-17 18:48:45,089 - mmdet - INFO - Epoch [17][500/518]	lr: 1.499e-03, eta: 0:14:43, time: 0.543, data_time: 0.009, memory: 9041, loss_cls: 0.1125, loss_bbox: 0.2938, loss_dir: 0.0405, loss: 0.4468, grad_norm: 0.4679
2023-02-17 18:49:41,914 - mmdet - INFO - Epoch [18][50/518]	lr: 1.378e-03, eta: 0:14:06, time: 0.935, data_time: 0.381, memory: 9041, loss_cls: 0.1115, loss_bbox: 0.3015, loss_dir: 0.0415, loss: 0.4545, grad_norm: 0.7325
2023-02-17 18:50:08,943 - mmdet - INFO - Epoch [18][100/518]	lr: 1.292e-03, eta: 0:13:38, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1124, loss_bbox: 0.2993, loss_dir: 0.0416, loss: 0.4533, grad_norm: 0.4657
2023-02-17 18:50:35,866 - mmdet - INFO - Epoch [18][150/518]	lr: 1.209e-03, eta: 0:13:10, time: 0.538, data_time: 0.010, memory: 9041, loss_cls: 0.1096, loss_bbox: 0.2885, loss_dir: 0.0417, loss: 0.4398, grad_norm: 0.4628
2023-02-17 18:51:02,742 - mmdet - INFO - Epoch [18][200/518]	lr: 1.127e-03, eta: 0:12:41, time: 0.538, data_time: 0.010, memory: 9041, loss_cls: 0.1102, loss_bbox: 0.2952, loss_dir: 0.0390, loss: 0.4443, grad_norm: 0.4938
2023-02-17 18:51:29,946 - mmdet - INFO - Epoch [18][250/518]	lr: 1.049e-03, eta: 0:12:13, time: 0.544, data_time: 0.009, memory: 9041, loss_cls: 0.1091, loss_bbox: 0.2917, loss_dir: 0.0394, loss: 0.4402, grad_norm: 0.3787
2023-02-17 18:51:56,656 - mmdet - INFO - Epoch [18][300/518]	lr: 9.726e-04, eta: 0:11:45, time: 0.534, data_time: 0.009, memory: 9041, loss_cls: 0.1093, loss_bbox: 0.2906, loss_dir: 0.0387, loss: 0.4385, grad_norm: 0.4875
2023-02-17 18:52:23,611 - mmdet - INFO - Epoch [18][350/518]	lr: 8.990e-04, eta: 0:11:17, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1085, loss_bbox: 0.2854, loss_dir: 0.0383, loss: 0.4322, grad_norm: 0.5694
2023-02-17 18:52:50,588 - mmdet - INFO - Epoch [18][400/518]	lr: 8.281e-04, eta: 0:10:48, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1083, loss_bbox: 0.2943, loss_dir: 0.0394, loss: 0.4419, grad_norm: 0.4063
2023-02-17 18:53:17,616 - mmdet - INFO - Epoch [18][450/518]	lr: 7.598e-04, eta: 0:10:20, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1080, loss_bbox: 0.2844, loss_dir: 0.0381, loss: 0.4305, grad_norm: 0.4136
2023-02-17 18:53:45,307 - mmdet - INFO - Epoch [18][500/518]	lr: 6.942e-04, eta: 0:09:52, time: 0.554, data_time: 0.009, memory: 9041, loss_cls: 0.1093, loss_bbox: 0.2861, loss_dir: 0.0396, loss: 0.4350, grad_norm: 0.4416
2023-02-17 18:54:41,425 - mmdet - INFO - Epoch [19][50/518]	lr: 6.094e-04, eta: 0:09:15, time: 0.919, data_time: 0.370, memory: 9041, loss_cls: 0.1087, loss_bbox: 0.2912, loss_dir: 0.0397, loss: 0.4396, grad_norm: 0.5207
2023-02-17 18:55:08,271 - mmdet - INFO - Epoch [19][100/518]	lr: 5.504e-04, eta: 0:08:46, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1098, loss_bbox: 0.2869, loss_dir: 0.0385, loss: 0.4352, grad_norm: 0.4843
2023-02-17 18:55:35,563 - mmdet - INFO - Epoch [19][150/518]	lr: 4.942e-04, eta: 0:08:18, time: 0.546, data_time: 0.010, memory: 9041, loss_cls: 0.1077, loss_bbox: 0.2827, loss_dir: 0.0413, loss: 0.4318, grad_norm: 0.4329
2023-02-17 18:56:02,585 - mmdet - INFO - Epoch [19][200/518]	lr: 4.408e-04, eta: 0:07:50, time: 0.540, data_time: 0.009, memory: 9041, loss_cls: 0.1087, loss_bbox: 0.2870, loss_dir: 0.0377, loss: 0.4333, grad_norm: 0.4464
2023-02-17 18:56:29,542 - mmdet - INFO - Epoch [19][250/518]	lr: 3.904e-04, eta: 0:07:22, time: 0.539, data_time: 0.009, memory: 9041, loss_cls: 0.1082, loss_bbox: 0.2864, loss_dir: 0.0389, loss: 0.4335, grad_norm: 0.4200
2023-02-17 18:56:56,417 - mmdet - INFO - Epoch [19][300/518]	lr: 3.430e-04, eta: 0:06:53, time: 0.538, data_time: 0.010, memory: 9041, loss_cls: 0.1069, loss_bbox: 0.2885, loss_dir: 0.0378, loss: 0.4332, grad_norm: 0.4017
2023-02-17 18:57:23,274 - mmdet - INFO - Epoch [19][350/518]	lr: 2.985e-04, eta: 0:06:25, time: 0.537, data_time: 0.010, memory: 9041, loss_cls: 0.1070, loss_bbox: 0.2838, loss_dir: 0.0383, loss: 0.4291, grad_norm: 0.5082
2023-02-17 18:57:50,037 - mmdet - INFO - Epoch [19][400/518]	lr: 2.570e-04, eta: 0:05:57, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1080, loss_bbox: 0.2891, loss_dir: 0.0382, loss: 0.4353, grad_norm: 0.4919
2023-02-17 18:58:16,846 - mmdet - INFO - Epoch [19][450/518]	lr: 2.185e-04, eta: 0:05:29, time: 0.536, data_time: 0.010, memory: 9041, loss_cls: 0.1062, loss_bbox: 0.2771, loss_dir: 0.0366, loss: 0.4199, grad_norm: 0.3900
2023-02-17 18:58:43,604 - mmdet - INFO - Epoch [19][500/518]	lr: 1.831e-04, eta: 0:05:01, time: 0.535, data_time: 0.010, memory: 9041, loss_cls: 0.1076, loss_bbox: 0.2810, loss_dir: 0.0378, loss: 0.4264, grad_norm: 0.4784
2023-02-17 18:59:39,821 - mmdet - INFO - Epoch [20][50/518]	lr: 1.399e-04, eta: 0:04:23, time: 0.922, data_time: 0.295, memory: 9041, loss_cls: 0.1085, loss_bbox: 0.2875, loss_dir: 0.0389, loss: 0.4348, grad_norm: 0.4764
2023-02-17 19:00:07,021 - mmdet - INFO - Epoch [20][100/518]	lr: 1.118e-04, eta: 0:03:55, time: 0.544, data_time: 0.010, memory: 9041, loss_cls: 0.1101, loss_bbox: 0.2868, loss_dir: 0.0383, loss: 0.4353, grad_norm: 0.4057
2023-02-17 19:00:34,429 - mmdet - INFO - Epoch [20][150/518]	lr: 8.680e-05, eta: 0:03:26, time: 0.548, data_time: 0.010, memory: 9041, loss_cls: 0.1059, loss_bbox: 0.2757, loss_dir: 0.0394, loss: 0.4210, grad_norm: 0.4057
2023-02-17 19:01:01,372 - mmdet - INFO - Epoch [20][200/518]	lr: 6.494e-05, eta: 0:02:58, time: 0.539, data_time: 0.010, memory: 9041, loss_cls: 0.1068, loss_bbox: 0.2849, loss_dir: 0.0379, loss: 0.4296, grad_norm: 0.4623
2023-02-17 19:01:28,569 - mmdet - INFO - Epoch [20][250/518]	lr: 4.624e-05, eta: 0:02:30, time: 0.544, data_time: 0.010, memory: 9041, loss_cls: 0.1059, loss_bbox: 0.2826, loss_dir: 0.0388, loss: 0.4273, grad_norm: 0.3912
2023-02-17 19:01:55,203 - mmdet - INFO - Epoch [20][300/518]	lr: 3.070e-05, eta: 0:02:02, time: 0.533, data_time: 0.009, memory: 9041, loss_cls: 0.1059, loss_bbox: 0.2837, loss_dir: 0.0379, loss: 0.4275, grad_norm: 0.4049
2023-02-17 19:02:22,262 - mmdet - INFO - Epoch [20][350/518]	lr: 1.833e-05, eta: 0:01:34, time: 0.541, data_time: 0.010, memory: 9041, loss_cls: 0.1051, loss_bbox: 0.2793, loss_dir: 0.0369, loss: 0.4213, grad_norm: 0.4412
2023-02-17 19:02:49,244 - mmdet - INFO - Epoch [20][400/518]	lr: 9.140e-06, eta: 0:01:06, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1067, loss_bbox: 0.2868, loss_dir: 0.0380, loss: 0.4314, grad_norm: 0.4388
2023-02-17 19:03:16,227 - mmdet - INFO - Epoch [20][450/518]	lr: 3.140e-06, eta: 0:00:38, time: 0.540, data_time: 0.010, memory: 9041, loss_cls: 0.1060, loss_bbox: 0.2756, loss_dir: 0.0358, loss: 0.4173, grad_norm: 0.5149
2023-02-17 19:03:42,896 - mmdet - INFO - Epoch [20][500/518]	lr: 3.305e-07, eta: 0:00:10, time: 0.533, data_time: 0.010, memory: 9041, loss_cls: 0.1064, loss_bbox: 0.2768, loss_dir: 0.0368, loss: 0.4200, grad_norm: 0.4041
2023-02-17 19:03:52,955 - mmdet - INFO - Saving checkpoint at 20 epochs
2023-02-17 19:04:45,017 - mmdet - INFO - 
Pedestrian AP@0.50, 0.50, 0.50:
bbox AP:24.0259, 22.6612, 22.6273
bev  AP:20.4422, 21.5992, 21.5181
3d   AP:18.5188, 17.6514, 17.6519
aos  AP:11.60, 10.74, 10.72
Pedestrian AP@0.50, 0.25, 0.25:
bbox AP:24.0259, 22.6612, 22.6273
bev  AP:31.5696, 30.8463, 29.1074
3d   AP:31.0938, 28.4610, 28.0940
aos  AP:11.60, 10.74, 10.72
Cyclist AP@0.50, 0.50, 0.50:
bbox AP:49.0053, 42.9289, 42.7263
bev  AP:48.5577, 39.7910, 39.6601
3d   AP:44.4264, 38.6587, 38.3976
aos  AP:21.09, 18.56, 18.47
Cyclist AP@0.50, 0.25, 0.25:
bbox AP:49.0053, 42.9289, 42.7263
bev  AP:55.9602, 47.5392, 47.3008
3d   AP:55.8770, 47.4749, 47.2097
aos  AP:21.09, 18.56, 18.47
Car AP@0.70, 0.70, 0.70:
bbox AP:22.2030, 16.8924, 17.0093
bev  AP:79.7088, 62.1751, 62.1706
3d   AP:74.8052, 51.7402, 51.7519
aos  AP:11.43, 8.68, 8.74
Car AP@0.70, 0.50, 0.50:
bbox AP:22.2030, 16.8924, 17.0093
bev  AP:89.7393, 71.9015, 71.9262
3d   AP:81.2209, 71.6589, 63.2120
aos  AP:11.43, 8.68, 8.74

Overall AP@easy, moderate, hard:
bbox AP:31.7447, 27.4942, 27.4543
bev  AP:49.5696, 41.1884, 41.1163
3d   AP:45.9168, 36.0167, 35.9338
aos  AP:14.71, 12.66, 12.64

2023-02-17 19:04:45,060 - mmdet - INFO - Exp name: trainval_config_i.py
2023-02-17 19:04:45,061 - mmdet - INFO - Epoch(val) [20][453]	KITTI/Pedestrian_3D_easy_strict: 18.5188, KITTI/Pedestrian_BEV_easy_strict: 20.4422, KITTI/Pedestrian_2D_easy_strict: 24.0259, KITTI/Pedestrian_3D_moderate_strict: 17.6514, KITTI/Pedestrian_BEV_moderate_strict: 21.5992, KITTI/Pedestrian_2D_moderate_strict: 22.6612, KITTI/Pedestrian_3D_hard_strict: 17.6519, KITTI/Pedestrian_BEV_hard_strict: 21.5181, KITTI/Pedestrian_2D_hard_strict: 22.6273, KITTI/Pedestrian_3D_easy_loose: 31.0938, KITTI/Pedestrian_BEV_easy_loose: 31.5696, KITTI/Pedestrian_2D_easy_loose: 24.0259, KITTI/Pedestrian_3D_moderate_loose: 28.4610, KITTI/Pedestrian_BEV_moderate_loose: 30.8463, KITTI/Pedestrian_2D_moderate_loose: 22.6612, KITTI/Pedestrian_3D_hard_loose: 28.0940, KITTI/Pedestrian_BEV_hard_loose: 29.1074, KITTI/Pedestrian_2D_hard_loose: 22.6273, KITTI/Cyclist_3D_easy_strict: 44.4264, KITTI/Cyclist_BEV_easy_strict: 48.5577, KITTI/Cyclist_2D_easy_strict: 49.0053, KITTI/Cyclist_3D_moderate_strict: 38.6587, KITTI/Cyclist_BEV_moderate_strict: 39.7910, KITTI/Cyclist_2D_moderate_strict: 42.9289, KITTI/Cyclist_3D_hard_strict: 38.3976, KITTI/Cyclist_BEV_hard_strict: 39.6601, KITTI/Cyclist_2D_hard_strict: 42.7263, KITTI/Cyclist_3D_easy_loose: 55.8770, KITTI/Cyclist_BEV_easy_loose: 55.9602, KITTI/Cyclist_2D_easy_loose: 49.0053, KITTI/Cyclist_3D_moderate_loose: 47.4749, KITTI/Cyclist_BEV_moderate_loose: 47.5392, KITTI/Cyclist_2D_moderate_loose: 42.9289, KITTI/Cyclist_3D_hard_loose: 47.2097, KITTI/Cyclist_BEV_hard_loose: 47.3008, KITTI/Cyclist_2D_hard_loose: 42.7263, KITTI/Car_3D_easy_strict: 74.8052, KITTI/Car_BEV_easy_strict: 79.7088, KITTI/Car_2D_easy_strict: 22.2030, KITTI/Car_3D_moderate_strict: 51.7402, KITTI/Car_BEV_moderate_strict: 62.1751, KITTI/Car_2D_moderate_strict: 16.8924, KITTI/Car_3D_hard_strict: 51.7519, KITTI/Car_BEV_hard_strict: 62.1706, KITTI/Car_2D_hard_strict: 17.0093, KITTI/Car_3D_easy_loose: 81.2209, KITTI/Car_BEV_easy_loose: 89.7393, KITTI/Car_2D_easy_loose: 22.2030, KITTI/Car_3D_moderate_loose: 71.6589, KITTI/Car_BEV_moderate_loose: 71.9015, KITTI/Car_2D_moderate_loose: 16.8924, KITTI/Car_3D_hard_loose: 63.2120, KITTI/Car_BEV_hard_loose: 71.9262, KITTI/Car_2D_hard_loose: 17.0093, KITTI/Overall_3D_easy: 45.9168, KITTI/Overall_BEV_easy: 49.5696, KITTI/Overall_2D_easy: 31.7447, KITTI/Overall_3D_moderate: 36.0167, KITTI/Overall_BEV_moderate: 41.1884, KITTI/Overall_2D_moderate: 27.4942, KITTI/Overall_3D_hard: 35.9338, KITTI/Overall_BEV_hard: 41.1163, KITTI/Overall_2D_hard: 27.4543
